# People and user management system
# Contains person profiles and investment criteria with access policies

module people {
    scalar type Role extending enum<Founder, Ceo, Cto, Cfo, Coo, Investor, Board, Advisor, Employee, Other>;
    
    type Criteria extending default::Timestamp {
        required link person: Person;
        multi link preferred_goals: taxonomy::Goal;
        property min_investment: float64;
        property max_investment: float64;
        property preferred_industries: array<str>;
        property investment_stage: str;
        
        access policy owner
          allow all
          using (exists global default::current_user and global default::current_user.id ?= .person.id) {
            errmessage := "Only the person can modify their investment criteria";
          };
    }
    
    type Person extending default::Timestamp {
        multi link policies: access::Policy;
        link employer: companies::Company;
        link identity: ext::auth::Identity;
        multi link portfolio: funding::Investment;
        link criteria: Criteria;
        required property email: std::str {
            constraint std::exclusive
        };
        required property firstname: std::str;
        property fullname := (((.firstname ++ ' ') ++ .lastname));
        property is_key_executive: std::bool {
            default := false
        };
        property job_title: str;
        property joined_date: datetime;
        required property lastname: str;
        property linkedin_url: str;
        property photo_url: str;
        property role: Role;
        property profile: str;
        
        access policy owner
          allow all
          using (exists global default::current_user and global default::current_user.id ?= .id) {
            errmessage := "Only the person can modify their own profile";
          };
    }
}