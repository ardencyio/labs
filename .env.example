# Gel Database Environment Configuration Template
# Copy this file to .env and replace placeholder values with actual credentials
# NEVER commit .env to version control - it contains sensitive information

# ================================
# CORE GEL SERVER CONFIGURATION  
# ================================
# These are the standard Gel environment variables for server configuration

# Primary Admin User - Standard Gel environment variables
GEL_SERVER_USER=goose
GEL_SERVER_PASSWORD=<YOUR_SECURE_ADMIN_PASSWORD>

# Server Connection Settings
GEL_HOST=localhost
GEL_PORT=5656

# Authentication Configuration - JWT signing key for auth extension
# Generate with: openssl rand -base64 256 | tr -d '\n'
AUTH_SIGNING_KEY=<YOUR_SECURE_JWT_SIGNING_KEY>

# ================================
# COMPATIBILITY ALIASES
# ================================
# These maintain compatibility with existing tools while using standard Gel variables

# CLI User Configuration (for tools that still reference these)
GEL_USER=goose
GEL_PASSWORD=<YOUR_SECURE_ADMIN_PASSWORD>

# UI Admin User Configuration (for Gel UI)
GEL_UI_ADMIN_USER=goose
GEL_UI_ADMIN_PASSWORD=<YOUR_SECURE_ADMIN_PASSWORD>

# Development Security Settings (Change for production)
GEL_SERVER_SECURITY=insecure_dev_mode
GEL_SERVER_DEFAULT_AUTH_METHOD=Trust
GEL_SERVER_ADMIN_UI=enabled

# TLS Configuration for Development
GEL_SERVER_TLS_CERT_MODE=generate_self_signed
GEL_CLIENT_TLS_SECURITY=insecure

# Bootstrap Configuration - Combined setup script
GEL_SERVER_BOOTSTRAP_SCRIPT_FILE=config.edgeql

# Database Connection String (constructed from above variables)
GEL_DSN=gel://goose:<YOUR_SECURE_ADMIN_PASSWORD>@localhost:5656

# Production Settings (uncomment and modify for production)
# GEL_SERVER_SECURITY=strict
# GEL_SERVER_TLS_CERT_MODE=require_file
# GEL_CLIENT_TLS_SECURITY=strict